{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","className","s","list","map","option","btn","type","onClick","data-button-type","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","feedbackOptionBtnClick","event","target","dataset","buttonType","setState","prevState","countTotalFeedback","Object","keys","reduce","acc","key","countPositiveFeedbackPercentage","persentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2TA2BeA,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oBAAIC,UAAWC,IAAEC,KAAjB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,6BACE,wBACEJ,UAAWC,IAAEI,IACbC,KAAK,SACLC,QAASR,EACTS,mBAAkBJ,EAJpB,SAMGA,KAPIA,SCQFK,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCiBQC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIjB,UAAWC,IAAEC,KAAjB,UACE,wCAAWW,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,SCAfC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCmFEC,E,4MA9EbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,uBAAyB,SAAAC,GACvB,IAAMnB,EAASmB,EAAMC,OAAOC,QAAQC,WAEpC,EAAKC,UAAS,SAAAC,GACZ,OAAO,2BAAKA,GAAZ,kBAAwBxB,EAAUwB,EAAUxB,IAAW,Q,EAI3DyB,mBAAqB,WACnB,OAAOC,OAAOC,KAAK,EAAKV,OAAOW,QAAO,SAACC,EAAKC,GAC1C,OAAQD,EAAO,EAAKZ,MAAMa,KACzB,I,EAGLC,gCAAkC,WAChC,IAAMC,EAAaC,KAAKC,MACrB,EAAKjB,MAAMR,KAAO,EAAKgB,qBAAwB,KAElD,OAAOO,GAA0B,G,uDAIjC,OACE,sBAAKpC,UAAU,MAAf,UAeE,cAAC,EAAD,CAASU,MAAM,wBAAf,SACE,cAAC,EAAD,CACEZ,QAASgC,OAAOC,KAAKQ,KAAKlB,OAC1BtB,gBAAiBwC,KAAKjB,2BAGzBiB,KAAKV,qBACJ,cAAC,EAAD,CAASnB,MAAM,aAAf,SACE,cAAC,EAAD,CACEG,KAAM0B,KAAKlB,MAAMR,KACjBC,QAASyB,KAAKlB,MAAMP,QACpBC,IAAKwB,KAAKlB,MAAMN,IAChBC,MAAOuB,KAAKV,qBACZZ,mBAAoBsB,KAAKJ,sCAI7B,cAAC,EAAD,CAAchB,QAAQ,6B,GA9DdqB,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,KAAO,8BAA8B,IAAM,+B,kBCA7DD,EAAOC,QAAU,CAAC,KAAO,4B","file":"static/js/main.dd2de23c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <ul className={s.list}>\n      {options.map(option => (\n        <li key={option}>\n          <button\n            className={s.btn}\n            type=\"button\"\n            onClick={onLeaveFeedback}\n            data-button-type={option}\n          >\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul className={s.list}>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>Positive feedback: {positivePercentage}</li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport './App.css';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  feedbackOptionBtnClick = event => {\n    const option = event.target.dataset.buttonType;\n\n    this.setState(prevState => {\n      return { ...prevState, [option]: (prevState[option] += 1) };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.keys(this.state).reduce((acc, key) => {\n      return (acc += this.state[key]);\n    }, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const persentage = Math.round(\n      (this.state.good / this.countTotalFeedback()) * 100,\n    );\n    return persentage ? persentage : 0;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <p>Please leave feedback</p>\n        <ul>\n          {Object.keys(this.state).map(key => (\n            <li key={key}>\n              <button\n                type=\"button\"\n                onClick={this.feedbackOptionBtnClick}\n                data-button-type={key}\n              >\n                {key}\n              </button>\n            </li>\n          ))}\n        </ul> */}\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.feedbackOptionBtnClick}\n          />\n        </Section>\n        {this.countTotalFeedback() ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n        {/* <h2>Statistics</h2>\n        <ul>\n          {Object.keys(this.state).map(key => (\n            <li key={key}>\n              {key}: {this.state[key]}\n            </li>\n          ))}\n        </ul>\n        <p>Total: {this.countTotalFeedback()}</p>\n        <p>Positive feedback:{this.countPositiveFeedbackPercentage()}</p> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__3vKD1\",\"btn\":\"FeedbackOptions_btn__3m2sU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2hp3Y\"};"],"sourceRoot":""}